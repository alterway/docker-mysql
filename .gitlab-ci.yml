stages:
  - build

environment:
  CI_DEBUG_TRACE: true
  
.build_push_template: &build_push_definition
  stage: build
  only:
    - preprod
    - master
  script:
    - docker build --pull -t $AW_REGISTRY/mysql:${CI_JOB_NAME:1} ${CI_JOB_NAME:1}/ >> /dev/null
    - docker push $AW_REGISTRY/mysql:${CI_JOB_NAME:1} > /dev/null
    - docker tag $AW_REGISTRY/mysql:${CI_JOB_NAME:1} $NAMESPACE/mysql:${CI_JOB_NAME:1} > /dev/null
    - docker push $NAMESPACE/mysql:${CI_JOB_NAME:1} > /dev/null
    - |
         if [[ "$CI_BUILD_REF_NAME" = "master" ]]; then
           docker tag $AW_REGISTRY/mysql:${CI_JOB_NAME:1} $CI_REGISTRY_IMAGE:${CI_JOB_NAME:1} > /dev/null
           docker push $CI_REGISTRY_IMAGE:${CI_JOB_NAME:1} > /dev/null
         fi

before_script:
  - if [[ "$CI_BUILD_REF_NAME" != master ]]; then echo $AW_REGISTRY_PASSWORD | docker login -u "$AW_REGISTRY_USER" --password-stdin $AW_REGISTRY; AW_REGISTRY="$AW_REGISTRY/$CI_BUILD_REF_NAME"; fi
  - if [[ "$CI_BUILD_REF_NAME"  = "master" ]]; then docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY; fi
  - NAMESPACE=$AW_REGISTRY/library

"8.0":
  <<: *build_push_definition

"5.7":
  <<: *build_push_definition

"5.6":
  <<: *build_push_definition

"5.5":
  <<: *build_push_definition
